<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/styles/stackoverflow-dark.min.css" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/highlight.min.js"></script>
<script>
    hljs.initHighlightingOnLoad();
</script>
<%- include('../partials/header.ejs') %>
    <div class="dashboard">
        <div class="wrapper">
            <div class="browse">
                <div class="sidebar">
                    <div class="sidebar-bar">
                        <div class="title">Dashboard</div>
                        <div class="categories">
                            <% for(let i = 0; i < categories.length; i++){ %>
                                <a id="<%= categories[i].id %>" href="/dashboard/<%= categories[i].id %>" <%- categories[i].visible ? "": `style="display: none;" `%> class="category <%= category === categories[i].id ? " active ":" "%>"><img src="<%=categories[i].icon%>" <%= categories[i].invert ? 'class=invert':""%> />
							<div class="text"><%=categories[i].title%></div>
						</a>
                                <% } %>
                        </div>
                    </div>
                </div>
                <div class="content" id="content">
                    <%for(let i = 0; i < categories.length; i++){let category = categories[i];%>
                        <div id="<%= category.id%>-content">
                            <% if(category.back){%>
                                <a onclick="setActive('<%=category.back%>')" class="title" style="display: inline-block; cursor: pointer;"><img src="/static/images/back.png" style="filter: invert(); height: 23px;">
                                    <%= category.title%>
                                </a>
                                <%}else{%>
                                    <div class="title">
                                        <%= category.title%>
                                    </div>
                                    <%}%>

                                        <%for(let j = 0; j < category.content.length;j++){let setting = category.content[j];if(setting.contentType ==="setting"){%>
                                            <div class="setting">
                                                <div class="row">
                                                    <label><%= setting.title%></label>
                                                    <div class="value <%= setting.type%>">
                                                        <% if(setting.type === "enum") { %>
                                                            <select oninput="let onChange = <%-setting.onChange (languages, language, user)%>; onChange(this.value); ">
                                                    <%for(let x = 0; x < setting.options.length;x++){let option = setting.options[x];%>
                                                    <option value="<%=option%>" <%= option === setting.value ? "selected":"" %>><%= setting.getText (languages, language, user)(option) %></option>
                                                    <% } %>
                                    </select>
                                                            <% } else if(setting.type === "boolean"){ %>
                                                                <label class="switch">
                                            <input type="checkbox" oninput="let onChange = <%-setting.onChange (languages, language, user)%>; onChange(this.checked);" <%= setting.value ? "checked":""%> />
                                            <span class="slider round"></span>
                                        </label>
                                                                <% }else if(setting.type === "range"){ %>
                                                                    <label><%=setting.getText (languages, language, user)(setting.value)%></label>
                                                                    <input oninput="let getText = <%=setting.getText (languages, language, user)%>; let onChange = <%-setting.onChange (languages, language, user)%>; onChange(this.value); this.previousElementSibling.innerText = getText(this.value);" class="rangeInput" type="range"
                                                                        value="<%=setting.value%>" min="<%=setting.min%>" max="<%=setting.max%>" step="<%=setting.step%>">

                                                                    <% } %>

                                                    </div>
                                                </div>
                                                <div class="desc">
                                                    <%= setting.desc%>
                                                </div>
                                            </div>
                                            <% } else if(setting.contentType ==="form"){ %>
                                                <div class="form">
                                                    <div class="title">
                                                        <%= setting.title%>
                                                    </div>
                                                    <%- include("../partials/form.ejs", {content: setting.content, post: setting.post}) %>
                                                </div>
                                                <% } else if(setting.contentType === "var"){ %>
                                                    <div style="display: none;" value="<%=setting.value%>" id="<%=setting.id%>"></div>
                                                    <% } else if(setting.contentType ==="button"){ %>
                                                        <a <%-setting.category ? `onclick="setActive('${setting.category}')" `: setting.href ? `href=${setting.href} ` : ""%>
                                                            <%if(setting.play){%>onclick="let play =
                                                                <%=setting.play%>; play();"
                                                                    <% } %> class="setting button">
                                                                        <div class="row">
                                                                            <label><%= setting.title%></label>
                                                                            <div class="value" style="z-index: 0;">
                                                                                <% if(setting.category){ %>
                                                                                    <img src="/static/images/edit_key.png">
                                                                                    <% }else if(setting.href){ %>
                                                                                        <img src="/static/images/link.png">
                                                                                        <% }else if(setting.play){ %>
                                                                                            <img style="filter: invert();" src="/static/images/play.png">
                                                                                            <% } %>
                                                                            </div>
                                                                        </div>
                                                                        <div class="desc">
                                                                            <%= setting.desc%>
                                                                        </div>
                                                        </a>
                                                        <% } %>
                                                            <% } %>
                        </div>
                        <% } %>
                </div>
            </div>
        </div>
    </div>
    </div>
    <script src="/static/js/format.js"></script>
    <script>
        const readFile = (file) => {
            return new Promise((resolve) => {
                const reader = new FileReader();
                reader.onloadend = (e) => {
                    resolve(e.target.result)
                };
                reader.readAsText(file);
            });
        };
        const readFileDataURL = (file) => {
            return new Promise((resolve) => {
                const reader = new FileReader();
                reader.onloadend = (e) => {
                    resolve(e.target.result)
                };
                reader.readAsDataURL(file);
            });
        };

        let textarea = document.getElementsByClassName('textarea')
        for (var i = 0; i < textarea.length; i++) {
            textarea[i].addEventListener('keydown', function(e) {
                e = e || window.event;
                var target = e.target || e.srcElement;
                if (e.key == 'Tab') {
                    e.preventDefault();
                    var start = this.selectionStart;
                    var end = this.selectionEnd;

                    // set textarea value to: text before caret + tab + text after caret
                    this.value = this.value.substring(0, start) +
                        "    " + this.value.substring(end);

                    // put caret at right position again
                    this.selectionStart =
                        this.selectionEnd = start + 1;
                }
            });
        }

        let pageChanged = (page) => {
            document.getElementById(page.id + "-preview").innerHTML = format(page.value);
            let codeParents = document.getElementById(page.id + "-preview").getElementsByTagName('pre');
            for (let i = 0; i < codeParents.length; i++) {
                let codes = codeParents[i].getElementsByTagName('code');
                for (let j = 0; j < codes.length; j++) {
                    hljs.highlightBlock(codes[j]);
                }
            }
        }

        let page = document.getElementsByClassName('page')
        for (var i = 0; i < page.length; i++) {
            page[i].nextElementSibling.onclick = (e) => {
                var target = e.target || e.srcElement;
                if (target.nextElementSibling.style.maxHeight === '0px')
                    target.nextElementSibling.removeAttribute("style");
                else {
                    target.nextElementSibling.style.maxHeight = '0px';
                    target.nextElementSibling.style.padding = '0px';
                }
            };
            page[i].addEventListener('keydown', function(e) {
                e = e || window.event;
                var target = e.target || e.srcElement;
                if (e.key == 'Tab') {
                    e.preventDefault();
                    var start = this.selectionStart;
                    var end = this.selectionEnd;

                    // set page value to: text before caret + tab + text after caret
                    this.value = this.value.substring(0, start) +
                        "\t" + this.value.substring(end);

                    // put caret at right position again
                    this.selectionStart =
                        this.selectionEnd = start + 1;
                    pageChanged(target);
                }
            });
        }

        let minFiles = (input, min, type) => {
            input.onclick = (e) => {
                e.target.value = '';
            }
            input.onchange = (e) => {
                if (e.target.files.length < min) {
                    alert(`Minimal ${min} files accepted.`);
                    e.preventDefault();
                    e.target.value = '';
                    e.target.previousElementSibling.removeAttribute("style");
                    e.target.previousElementSibling.getElementsByClassName('upload-title')[0].innerText = "<%= language.dashboard.upload%>";
                } else {
                    e.target.previousElementSibling.style.backgroundColor = '#66bb6a';
                    e.target.previousElementSibling.getElementsByClassName('upload-title')[0].innerText = "<%= language.dashboard.uploaded%>";
                }
            }
        }

        let maxFiles = (input, max, type) => {
            input.onclick = (e) => {
                e.target.value = '';
            }
            input.onchange = (e) => {
                if (e.target.files.length > max) {
                    alert(`Only ${max} files accepted.`);
                    e.preventDefault();
                    e.target.value = '';
                    e.target.previousElementSibling.removeAttribute("style");
                    e.target.previousElementSibling.getElementsByClassName('upload-title')[0].innerText = "<%= language.dashboard.upload%>";
                } else {
                    e.target.previousElementSibling.style.backgroundColor = '#66bb6a';
                    e.target.previousElementSibling.getElementsByClassName('upload-title')[0].innerText = "<%= language.dashboard.uploaded%>";
                }
            }
        }

        let minMaxFiles = (input, min, max, type) => {
            maxFiles(input, max, type);
            minFiles(input, min, type);
        }

        let input = document.getElementsByTagName('input')
        for (var i = 0; i < input.length; i++) {
            if (input[i].getAttribute("type") !== "file") continue;
            if (input[i].getAttribute("accept") === "image/png")
                minMaxFiles(input[i], input[i].getAttribute("data-minImages"), input[i].getAttribute("data-maxImages"), 'image/png');

            if (input[i].getAttribute("accept") === ".js")
                minMaxFiles(input[i], input[i].getAttribute("data-minJs"), input[i].getAttribute("data-maxJs"), '.js')
        }


        let removeListItem = (id, li) => {
            li.remove();
        }

        let addListItem = (id, getText, value) => {
            let list = document.getElementById(id);
            let li = document.createElement('li');
            let a = document.createElement('a');
            value.trim();
            if (value === null || value.match(/^ *$/) !== null) return;
            a.innerText = getText(value);
            a.addEventListener("click", (e) => removeListItem(id, li));
            li.id = `${id}-${value}`;
            li.appendChild(a);
            list.appendChild(li);
        }

        let setActive = (id) => {
            window.history.pushState('', '<%= title%>', id);

            var categories = document.getElementsByClassName("category");
            for (let i = 0; i < categories.length; i++) {
                categories.item(i).classList.remove('active');
            }

            var categoriesDivs = document.getElementById('content').getElementsByTagName('div');
            for (i = 0; i < categoriesDivs.length; i++) {
                categoriesDivs.item(i).classList.remove('active');
            }

            document.getElementById(id).classList.add('active');
            document.getElementById(id + '-content').classList.add('active');
        }

        let anyActive = false;
        let categories = document.getElementsByClassName("category");
        for (let i = 0; i < categories.length; i++) {
            let category = categories.item(i);
            if (category.classList.contains('active')) {
                anyActive = true;
                document.getElementById(category.id + '-content').classList.add('active');
            }

            category.onclick = (e) => {
                e.preventDefault();
                setActive(category.id);
            };
        }
        if (!anyActive)
            setActive(categories.item(0).id);
    </script>
    <%- include('../partials/footer.ejs') %>